---
- name: Test AWS server provisioning
  hosts: localhost
  vars:
    target_env: "desktop"  # Can be "desktop" or "raspberry_pi"
    aws_region: "us-east-1"
    roles_to_test: []  # Empty since we're just testing infrastructure
    cleanup_on_failure: false  # Keep instance for debugging if setup fails
    test_mode: true  # Indicates this is a test run
    cleanup_on_success: true  # Set to false to keep prod resources
    force_cleanup: false  # Emergency cleanup override
    ssh_key_path: "{{ lookup('env', 'HOME') }}/.ssh/leo-personal"

  pre_tasks:
    - name: Install required collections from requirements
      command: ansible-galaxy install -r requirements.yml
      changed_when: false
      run_once: true

    - name: Verify AWS credentials
      command: aws sts get-caller-identity
      changed_when: false
      register: aws_check
      failed_when: aws_check.rc != 0

    - name: Verify SSH key requirements
      stat:
        path: "{{ item }}"
      loop:
        - "~/.ssh/leo-personal"
        - "~/.ssh/leo-personal.pub"
      register: ssh_check
      failed_when: not ssh_check.stat.exists

  roles:
    - role: aws-cloudlab

  post_tasks:
    - name: Verify server accessibility and internet access
      wait_for:
        host: "{{ test_instance.instances[0].private_ip_address }}"
        port: 22
        timeout: 300
        search_regex: OpenSSH
      register: ssh_check

    - name: Test SSH connection as l3o user
      command: >
        ssh -o StrictHostKeyChecking=no
        -o ProxyCommand='ssh -W %h:%p -i ~/.ssh/leo-personal ubuntu@{{ public_subnets.results[0].subnet.id }}'
        -i ~/.ssh/leo-personal
        l3o@{{ test_instance.instances[0].private_ip_address }}
        "echo 'SSH connection successful' && curl -s http://checkip.amazonaws.com"
      register: ssh_test
      changed_when: false
      failed_when: ssh_test.rc != 0

    - name: Display infrastructure test results
      debug:
        msg: |
          AWS Infrastructure Test Results:
          Instance Type: {{ selected_instance_type }}
          Instance IP: {{ test_instance.instances[0].public_ip_address }}
          VPC ID: {{ test_vpc.vpc.id }}
          Public Subnets: {{ public_subnets.results | map(attribute='subnet.id') | list }}
          Private Subnets: {{ private_subnets.results | map(attribute='subnet.id') | list }}
          Security Group: {{ test_sg.group_id }}
          NAT Gateway: {{ nat_gateway.nat_gateway_id if nat_gateway is defined else 'Not Created' }}
          SSH Access (l3o user): {{ ssh_test is success }}
      when: test_instance is defined

    - name: Cleanup notification
      debug:
        msg: >
          Infrastructure will be cleaned up automatically since test_mode=true.
          Set cleanup_on_success=false to keep resources.
      when: test_mode | default(true) 